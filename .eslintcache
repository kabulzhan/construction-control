[{"E:\\Work\\Строй контроль\\construction-control\\src\\index.js":"1","E:\\Work\\Строй контроль\\construction-control\\src\\App.js":"2","E:\\Work\\Строй контроль\\construction-control\\src\\reportWebVitals.js":"3","E:\\Work\\Строй контроль\\construction-control\\src\\pages\\login\\login-routes.jsx":"4","E:\\Work\\Строй контроль\\construction-control\\src\\pages\\login\\login-page.jsx":"5","E:\\Work\\Строй контроль\\construction-control\\src\\components\\form-input\\form-input.component.jsx":"6","E:\\Work\\Строй контроль\\construction-control\\src\\components\\buttons\\custom-button.jsx":"7","E:\\Work\\Строй контроль\\construction-control\\src\\pages\\login\\recover-page.jsx":"8","E:\\Work\\Строй контроль\\construction-control\\src\\pages\\main\\main-routes.jsx":"9","E:\\Work\\Строй контроль\\construction-control\\src\\components\\header\\header-component.jsx":"10","E:\\Work\\Строй контроль\\construction-control\\src\\components\\header\\DropdownMenu.jsx":"11","E:\\Work\\Строй контроль\\construction-control\\src\\redux\\store.js":"12","E:\\Work\\Строй контроль\\construction-control\\src\\redux\\root-reducer.js":"13","E:\\Work\\Строй контроль\\construction-control\\src\\redux\\root-saga.js":"14","E:\\Work\\Строй контроль\\construction-control\\src\\pages\\login\\reset-password.jsx":"15","E:\\Work\\Строй контроль\\construction-control\\src\\pages\\main\\manage-users.jsx":"16","E:\\Work\\Строй контроль\\construction-control\\src\\components\\modal.jsx":"17","E:\\Work\\Строй контроль\\construction-control\\src\\components\\manage-users\\add-user.jsx":"18","E:\\Work\\Строй контроль\\construction-control\\src\\components\\image-upload.jsx":"19","E:\\Work\\Строй контроль\\construction-control\\src\\redux\\user\\user.reducer.js":"20","E:\\Work\\Строй контроль\\construction-control\\src\\redux\\user\\user.types.js":"21","E:\\Work\\Строй контроль\\construction-control\\src\\redux\\user\\user.actions.js":"22","E:\\Work\\Строй контроль\\construction-control\\src\\components\\manage-users\\user-row.jsx":"23"},{"size":673,"mtime":1610580559230,"results":"24","hashOfConfig":"25"},{"size":910,"mtime":1610378571482,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"25"},{"size":872,"mtime":1610467560749,"results":"28","hashOfConfig":"25"},{"size":1390,"mtime":1610468033518,"results":"29","hashOfConfig":"25"},{"size":832,"mtime":1610470256776,"results":"30","hashOfConfig":"25"},{"size":652,"mtime":1610384641998,"results":"31","hashOfConfig":"25"},{"size":1852,"mtime":1610468044662,"results":"32","hashOfConfig":"25"},{"size":623,"mtime":1610541216582,"results":"33","hashOfConfig":"25"},{"size":2708,"mtime":1610271244132,"results":"34","hashOfConfig":"25"},{"size":1761,"mtime":1610272031340,"results":"35","hashOfConfig":"25"},{"size":595,"mtime":1610580534133,"results":"36","hashOfConfig":"25"},{"size":437,"mtime":1610580312134,"results":"37","hashOfConfig":"25"},{"size":111,"mtime":1610035728658,"results":"38","hashOfConfig":"25"},{"size":4741,"mtime":1610575780667,"results":"39","hashOfConfig":"25"},{"size":1346,"mtime":1610621009086,"results":"40","hashOfConfig":"25"},{"size":1433,"mtime":1610542988795,"results":"41","hashOfConfig":"25"},{"size":4328,"mtime":1610585189968,"results":"42","hashOfConfig":"25"},{"size":2368,"mtime":1610575094342,"results":"43","hashOfConfig":"25"},{"size":406,"mtime":1610585425314,"results":"44","hashOfConfig":"25"},{"size":89,"mtime":1610581464446,"results":"45","hashOfConfig":"25"},{"size":142,"mtime":1610581479295,"results":"46","hashOfConfig":"25"},{"size":937,"mtime":1610634034241,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"yck3l2",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"51"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"51"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"51"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"51"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"51"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"51"},"E:\\Work\\Строй контроль\\construction-control\\src\\index.js",["103"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store /*, persistor*/ } from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        {/* <PersistGate persistor={persistor}> */}\n        <App />\n        {/* </PersistGate> */}\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n",["104","105"],"E:\\Work\\Строй контроль\\construction-control\\src\\App.js",[],"E:\\Work\\Строй контроль\\construction-control\\src\\reportWebVitals.js",[],"E:\\Work\\Строй контроль\\construction-control\\src\\pages\\login\\login-routes.jsx",[],"E:\\Work\\Строй контроль\\construction-control\\src\\pages\\login\\login-page.jsx",[],"E:\\Work\\Строй контроль\\construction-control\\src\\components\\form-input\\form-input.component.jsx",[],["106","107"],"E:\\Work\\Строй контроль\\construction-control\\src\\components\\buttons\\custom-button.jsx",[],"E:\\Work\\Строй контроль\\construction-control\\src\\pages\\login\\recover-page.jsx",[],"E:\\Work\\Строй контроль\\construction-control\\src\\pages\\main\\main-routes.jsx",[],"E:\\Work\\Строй контроль\\construction-control\\src\\components\\header\\header-component.jsx",[],"E:\\Work\\Строй контроль\\construction-control\\src\\components\\header\\DropdownMenu.jsx",["108"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { createUseStyles } from \"react-jss\";\r\n\r\nconst useStyles = createUseStyles({\r\n  dropdownMenu: {\r\n    position: \"absolute\",\r\n    top: \"66px\",\r\n    width: \"768px\",\r\n    zIndex: 5,\r\n    backgroundColor: \"#F8F8F8\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  loginMenu: {\r\n    textAlign: \"right\",\r\n    paddingRight: \"10px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  menuItem: {\r\n    paddingLeft: \"10px\",\r\n    height: \"52px\",\r\n    lineHeight: \"52px\",\r\n    textDecoration: \"none\",\r\n    color: \"black !important\",\r\n  },\r\n});\r\n\r\nconst DropdownMenu = ({ outsideClickDetector, login }) => {\r\n  const classes = useStyles();\r\n  // const user = useSelector((state) => state.user);\r\n  const wrapperRef = React.useRef(null);\r\n  outsideClickDetector(wrapperRef);\r\n  return (\r\n    <>\r\n      {login ? (\r\n        <div className={classes.dropdownMenu} ref={wrapperRef}>\r\n          <div className={classes.loginMenu}>\r\n            <Link className={classes.menuItem} to=\"login/reset_password\">\r\n              Сменить пароль\r\n            </Link>\r\n            <Link className={classes.menuItem}> Выход</Link>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className={classes.dropdownMenu} ref={wrapperRef}>\r\n          <Link\r\n            onClick={() => console.log(\"hello world\")}\r\n            className={classes.menuItem}\r\n          >\r\n            Пользователи (виден только у администратора)\r\n          </Link>\r\n          <Link className={classes.menuItem}>Объекты</Link>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DropdownMenu;\r\n","E:\\Work\\Строй контроль\\construction-control\\src\\redux\\store.js",[],"E:\\Work\\Строй контроль\\construction-control\\src\\redux\\root-reducer.js",["109","110"],"import { combineReducers } from \"redux\";\r\nimport { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport userReducer from \"./user/user.reducer\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  // whitelist: [\"user\"],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  user: userReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n// export default persistReducer(persistConfig, rootReducer);\r\n","E:\\Work\\Строй контроль\\construction-control\\src\\redux\\root-saga.js",["111"],"import { all, call } from \"redux-saga/effects\";\r\n\r\nexport default function* rootSaga() {\r\n  yield all([]);\r\n}\r\n","E:\\Work\\Строй контроль\\construction-control\\src\\pages\\login\\reset-password.jsx",["112","113","114"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FormInput from \"../../components/form-input/form-input.component\";\r\nimport CustomButton from \"../../components/buttons/custom-button\";\r\nimport { createUseStyles } from \"react-jss\";\r\n\r\nconst useStyles = createUseStyles({\r\n  form: {\r\n    width: \"321px\",\r\n    margin: \"auto\",\r\n  },\r\n  instructions: {\r\n    marginBottom: \"33px\",\r\n    textAlign: \"center\",\r\n  },\r\n  link: {\r\n    display: \"inline-block\",\r\n    width: \"100%\",\r\n    textAlign: \"center\",\r\n    marginTop: \"18px\",\r\n  },\r\n  note: {\r\n    height: \"40px\",\r\n    paddingTop: \"6px\",\r\n    paddingLeft: \"5px\",\r\n    color: \"#1AA839\",\r\n  },\r\n  checkConfirmation: {\r\n    height: \"49px\",\r\n    paddingTop: \"6px\",\r\n    paddingLeft: \"5px\",\r\n  },\r\n  error: {\r\n    color: \"#FF6262\",\r\n  },\r\n});\r\n\r\nconst handleSubmit = (e) => {\r\n  e.preventDefault();\r\n};\r\n\r\nconst ResetPasswordByEmail = ({ byemail }) => {\r\n  const classes = useStyles();\r\n  const [newCredentials, setNewCredentials] = useState({\r\n    oldPassword: \"\",\r\n    newPassword: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const [passwordLengthMsg, setPasswordLengthMsg] = useState({\r\n    message: \"\",\r\n    error: false,\r\n  });\r\n\r\n  const [passwordMatchMsg, setPasswordMatchMsg] = useState({\r\n    message: \"\",\r\n    error: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!newCredentials.newPassword) {\r\n      if (passwordLengthMsg.message) {\r\n        setPasswordLengthMsg({ message: \"\", error: false });\r\n      }\r\n    } else if (newCredentials.newPassword.length < 6) {\r\n      if (!passwordLengthMsg.error) {\r\n        setPasswordLengthMsg({\r\n          message: \"Длина пароля должна быть не менее 6 симоволов\",\r\n          error: true,\r\n        });\r\n      }\r\n    } else if (passwordLengthMsg.error) {\r\n      setPasswordLengthMsg({\r\n        message: \"Отличный пароль! Мы гордимся вами!\",\r\n        error: false,\r\n      });\r\n    }\r\n  }, [newCredentials.newPassword]);\r\n\r\n  useEffect(() => {\r\n    if (!newCredentials.confirmPassword) return;\r\n    if (newCredentials.confirmPassword !== newCredentials.newPassword) {\r\n      setPasswordMatchMsg({\r\n        message: \"Пароль и подтверждение не совпадают\",\r\n        error: true,\r\n      });\r\n    } else {\r\n      if (passwordMatchMsg.message) {\r\n        setPasswordMatchMsg({\r\n          message: \"\",\r\n          error: false,\r\n        });\r\n      }\r\n    }\r\n  }, [newCredentials.confirmPassword]);\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.name === \"newPassword\") checkLength();\r\n    setNewCredentials({ ...newCredentials, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const checkLength = () => {\r\n    if (newCredentials.newPassword.length < 6)\r\n      return setPasswordLengthMsg({\r\n        message: \"Длина пароля должна быть не менее 6 симоволов\",\r\n        error: true,\r\n      });\r\n    if (passwordLengthMsg.error)\r\n      setPasswordLengthMsg({ message: \"\", error: false });\r\n  };\r\n  console.log(\"resetPasswordByEmail has been rendered\");\r\n  return (\r\n    <>\r\n      <form className={classes.form} onSubmit={handleSubmit}>\r\n        {byemail ? (\r\n          <div className={classes.instructions}>\r\n            Восстановление пароля для аккаунта {`placeholderAccount`},\r\n            идентификатор компании {`placeholderCompany`}\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <h3 className={classes.instructions}>Сменить пароль</h3>\r\n            <FormInput\r\n              label=\"Старый пароль\"\r\n              type=\"password\"\r\n              mBtm=\"40px\"\r\n              fs=\"14px\"\r\n              height=\"44px\"\r\n              name=\"oldPassword\"\r\n              onChange={handleChange}\r\n              value={newCredentials.oldPassword}\r\n            />\r\n          </>\r\n        )}\r\n        <FormInput\r\n          label=\"Новый пароль\"\r\n          type=\"password\"\r\n          value={newCredentials.newPassword}\r\n          onChange={handleChange}\r\n          name=\"newPassword\"\r\n          fs=\"14px\"\r\n          height=\"44px\"\r\n        />\r\n        <div\r\n          className={`${classes.note} ${\r\n            passwordLengthMsg.error && classes.error\r\n          } `}\r\n        >\r\n          {passwordLengthMsg.message}\r\n        </div>\r\n        <FormInput\r\n          label=\"Подтверждение\"\r\n          type=\"password\"\r\n          value={newCredentials.confirmPassword}\r\n          onChange={handleChange}\r\n          name=\"confirmPassword\"\r\n          fs=\"14px\"\r\n          height=\"44px\"\r\n        />\r\n        <div\r\n          className={`${classes.note} ${\r\n            passwordMatchMsg.error && classes.error\r\n          }`}\r\n        >\r\n          {passwordMatchMsg.message}\r\n        </div>\r\n        <CustomButton\r\n          bgColor=\"#1AA839\"\r\n          height=\"44px\"\r\n          width=\"100%\"\r\n          type=\"submit\"\r\n        >\r\n          {`Сменить пароль ${byemail ? \"и войти\" : \"\"}`}\r\n        </CustomButton>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResetPasswordByEmail;\r\n","E:\\Work\\Строй контроль\\construction-control\\src\\pages\\main\\manage-users.jsx",["115"],"import React from \"react\";\r\nimport { createUseStyles } from \"react-jss\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CustomButton from \"../../components/buttons/custom-button\";\r\nimport Modal from \"../../components/modal\";\r\nimport UserRow from \"../../components/manage-users/user-row\";\r\n\r\nconst useStyles = createUseStyles({\r\n  container: {\r\n    margin: \"0 32px\",\r\n  },\r\n  menuItem: {\r\n    lineHeight: \"32px\",\r\n    height: \"32px\",\r\n    width: \"115px\",\r\n    backgroundColor: \"#EBEBEB\",\r\n    textAlign: \"center\",\r\n    fontSize: \"12px\",\r\n  },\r\n  grid: {\r\n    minHeight: \"30px\",\r\n  },\r\n});\r\n\r\nconst ManageUsers = () => {\r\n  const classes = useStyles();\r\n  const usersList = useSelector((state) => state.user.usersList);\r\n  return (\r\n    <div className={classes.container}>\r\n      <h4>Панель администратора</h4>\r\n      <div>\r\n        <div className={classes.menuItem}>Пользователи</div>\r\n      </div>\r\n      <div className={classes.grid}>\r\n        {usersList.map((user) => (\r\n          <UserRow user={user} />\r\n        ))}\r\n      </div>\r\n      <Link to=\"/main/add_user\">\r\n        <CustomButton bgColor=\"#6B8CFF\" br=\"55px\">\r\n          добавить пользователя\r\n        </CustomButton>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManageUsers;\r\n","E:\\Work\\Строй контроль\\construction-control\\src\\components\\modal.jsx",[],"E:\\Work\\Строй контроль\\construction-control\\src\\components\\manage-users\\add-user.jsx",[],"E:\\Work\\Строй контроль\\construction-control\\src\\components\\image-upload.jsx",[],"E:\\Work\\Строй контроль\\construction-control\\src\\redux\\user\\user.reducer.js",[],"E:\\Work\\Строй контроль\\construction-control\\src\\redux\\user\\user.types.js",[],"E:\\Work\\Строй контроль\\construction-control\\src\\redux\\user\\user.actions.js",[],"E:\\Work\\Строй контроль\\construction-control\\src\\components\\manage-users\\user-row.jsx",["116"],"import React from \"react\";\r\nimport { createUseStyles } from \"react-jss\";\r\n\r\nconst usestyles = createUseStyles({\r\n  userRow: {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"50px 2fr 1fr 1fr\",\r\n    gridTemplateRows: \"50px\",\r\n    gap: \"1rem\",\r\n    margin: \"5px 0\",\r\n    alignItems: \"center\",\r\n  },\r\n  userImage: {\r\n    overflow: \"hidden\",\r\n    color: \"green\",\r\n    borderRadius: \"50%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    \"& img\": {\r\n      width: \"70px\",\r\n    },\r\n  },\r\n});\r\n\r\nconst UserRow = ({ user }) => {\r\n  const classes = usestyles(user);\r\n  console.log(user.img);\r\n  return (\r\n    <div className={classes.userRow}>\r\n      <div className={classes.userImage}>\r\n        <img src={user.img} />\r\n      </div>\r\n      <div>{`${user.firstname} ${user.lastname}`}</div>\r\n      <div>{`${user.email}`}</div>\r\n      <div>{`${user.tel}`}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserRow;\r\n",{"ruleId":"117","severity":1,"message":"118","line":6,"column":10,"nodeType":"119","messageId":"120","endLine":6,"endColumn":21},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"121","replacedBy":"125"},{"ruleId":"123","replacedBy":"126"},{"ruleId":"117","severity":1,"message":"127","line":3,"column":10,"nodeType":"119","messageId":"120","endLine":3,"endColumn":21},{"ruleId":"117","severity":1,"message":"128","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":24},{"ruleId":"117","severity":1,"message":"129","line":6,"column":7,"nodeType":"119","messageId":"120","endLine":6,"endColumn":20},{"ruleId":"117","severity":1,"message":"130","line":1,"column":15,"nodeType":"119","messageId":"120","endLine":1,"endColumn":19},{"ruleId":"117","severity":1,"message":"131","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":14},{"ruleId":"132","severity":1,"message":"133","line":78,"column":6,"nodeType":"134","endLine":78,"endColumn":34,"suggestions":"135"},{"ruleId":"132","severity":1,"message":"136","line":95,"column":6,"nodeType":"134","endLine":95,"endColumn":38,"suggestions":"137"},{"ruleId":"117","severity":1,"message":"138","line":6,"column":8,"nodeType":"119","messageId":"120","endLine":6,"endColumn":13},{"ruleId":"139","severity":1,"message":"140","line":32,"column":9,"nodeType":"141","endLine":32,"endColumn":31},"no-unused-vars","'PersistGate' is defined but never used.","Identifier","unusedVar","no-native-reassign",["142"],"no-negated-in-lhs",["143"],["142"],["143"],"'useSelector' is defined but never used.","'persistReducer' is defined but never used.","'persistConfig' is assigned a value but never used.","'call' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'passwordLengthMsg.error' and 'passwordLengthMsg.message'. Either include them or remove the dependency array.","ArrayExpression",["144"],"React Hook useEffect has missing dependencies: 'newCredentials.newPassword' and 'passwordMatchMsg.message'. Either include them or remove the dependency array.",["145"],"'Modal' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},"Update the dependencies array to be: [newCredentials.newPassword, passwordLengthMsg.error, passwordLengthMsg.message]",{"range":"150","text":"151"},"Update the dependencies array to be: [newCredentials.confirmPassword, newCredentials.newPassword, passwordMatchMsg.message]",{"range":"152","text":"153"},[1921,1949],"[newCredentials.newPassword, passwordLengthMsg.error, passwordLengthMsg.message]",[2386,2418],"[newCredentials.confirmPassword, newCredentials.newPassword, passwordMatchMsg.message]"]